class Solution {
public:
     int minEatingSpeed(vector<int>& piles, int h) {
        int n=piles.size();
        sort(piles.begin(),piles.end());
        int low=1,high=piles[n-1],f=1e9;
        long long hours;
        while(low<=high){
            hours=0;
            int mid=(low+high)/2;
            for(int i=0;i<n;i++){
                if(piles[i]%mid==0)
                hours+=piles[i]/mid;
                else
                hours+=(piles[i]/mid)+1;
            }
            if(hours<=(long long)h){
            f=mid;
            high=mid-1;
            }
            else{
            low=mid+1;
            }

        }
        return f;
    }
};
